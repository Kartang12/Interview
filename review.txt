using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.EntityFrameworkCore;
 
namespace EntityFrameworkExample
{
    public class BloggingContext : DbContext
    {
        public DbSet Blogs { get; set; }
        public DbSet Posts { get; set; }
        public DbSet Comments { get; set; }
 
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder
                .UseLazyLoadingProxies()
                .UseSqlServer(@"Server=(localdb)\mssqllocaldb;Database=Blogging;Integrated Security=True");
        }
    }
 
    public class Blog
    {
        public int BlogId { get; set; }
        public string Url { get; set; }
        public virtual ICollection Posts { get; set; }
    }
 
    public class Post
    {
        public int PostId { get; set; }
        public string Title { get; set; }
        public string Content { get; set; }
        public int BlogId { get; set; }
        public virtual Blog Blog { get; set; }
        public virtual ICollection Comments { get; set; }
    }
 
    public class Comment
    {
        public int CommentId { get; set; }
        public string Author { get; set; }
        public string Text { get; set; }
        public int PostId { get; set; }
        public virtual Post Post { get; set; }
    }
 
    class Program
    {
        static void Main(string[] args)
        {
            using (var db = new BloggingContext())
            {
                var blogs = db.Blogs.ToList();
 
                foreach (var blog in blogs)
                {
                    var posts = db.Posts.Where(p => p.BlogId == blog.BlogId).ToList();
                    Console.WriteLine($"Blog: {blog.Url}");
 
                    foreach (var post in posts)
                    {
                        Console.WriteLine($"- {post.Title}");
 
                        Console.WriteLine("Enter new title for the post:");
                        var newTitle = Console.ReadLine();
 
                        var sql = $"UPDATE Posts SET Title = '{newTitle}' WHERE PostId = {post.PostId}";
                        db.Database.ExecuteSqlRaw(sql);
 
                        db.SaveChanges();
 
                        foreach (var comment in post.Comments)
                        {
                            Console.WriteLine($"Comment by {comment.Author}: {comment.Text}");
                        }
                    }
                }
            }
        }
    }
}